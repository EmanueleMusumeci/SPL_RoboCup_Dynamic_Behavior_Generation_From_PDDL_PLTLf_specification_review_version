(define (domain strikerrobocupfond)
    (:requirements :conditional-effects :derived-predicates :negative-preconditions :non-deterministic :strips)
    (:predicates (ballpassed) (fluentisjollyavailable) (fluentisjollyinposition) (fluentisstrikerobstacleblockinggoal) (goalscored) (strikercankick) (strikerhasball) (strikershoulddribbleopponent) (val_strikerattemptingdribble))
    (:derived (val_strikerattemptingdribble) (strikerattemptingdribble))
    (:action dribbleopponent
        :parameters ()
        :precondition (and (fluentisstrikerobstacleblockinggoal) (not (fluentisjollyavailable)))
        :effect (and (and (strikerattemptingdribble)))
    )
     (:action kicktogoal
        :parameters ()
        :precondition (and (not (fluentisstrikerobstacleblockinggoal)) (strikercankick))
        :effect (and (and (goalscored)))
    )
     (:action movetoball
        :parameters ()
        :precondition (not (strikerhasball))
        :effect (and (oneof (and (not (fluentisstrikerobstacleblockinggoal)) (not (fluentisjollyavailable)) (not (fluentisjollyinposition)) (strikerhasball)) (and (not (fluentisstrikerobstacleblockinggoal)) (fluentisjollyavailable) (strikerhasball)) (and (fluentisstrikerobstacleblockinggoal) (fluentisjollyavailable) (not (fluentisjollyinposition)) (strikerhasball)) (and (fluentisstrikerobstacleblockinggoal) (fluentisjollyavailable) (fluentisjollyinposition) (strikerhasball)) (and (fluentisstrikerobstacleblockinggoal) (not (fluentisjollyavailable)) (not (fluentisjollyinposition)) (strikerhasball))))
    )
     (:action movewithballtokickingposition
        :parameters ()
        :precondition (and (not (fluentisstrikerobstacleblockinggoal)) (strikerhasball))
        :effect (and (and (strikercankick)))
    )
     (:action passballtojolly
        :parameters ()
        :precondition (and (fluentisstrikerobstacleblockinggoal) (fluentisjollyinposition) (fluentisjollyavailable))
        :effect (and (and (ballpassed)))
    )
     (:action waitforjolly
        :parameters ()
        :precondition (and (fluentisstrikerobstacleblockinggoal) (fluentisjollyavailable) (not (fluentisjollyinposition)) (not (strikercankick)))
        :effect (and (oneof (and (fluentisjollyinposition) (fluentisjollyavailable) (fluentisstrikerobstacleblockinggoal)) (and (not (fluentisjollyinposition)) (fluentisjollyavailable) (fluentisstrikerobstacleblockinggoal))))
    )
)